<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="2" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="test" duration-ms="22" started-at="2019-10-17T07:15:52Z" finished-at="2019-10-17T07:15:52Z">
    <groups>
    </groups>
    <test name="接口测试套件demo" duration-ms="22" started-at="2019-10-17T07:15:52Z" finished-at="2019-10-17T07:15:52Z">
      <class name="com.course.demo.TestDemo">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:com.course.demo.TestDemo@1554909b]" name="beforeSuite" is-config="true" duration-ms="5" started-at="2019-10-17T15:15:52Z" finished-at="2019-10-17T15:15:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:com.course.demo.TestDemo@1554909b]" name="beforeTest" is-config="true" duration-ms="0" started-at="2019-10-17T15:15:52Z" finished-at="2019-10-17T15:15:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.course.demo.TestDemo@1554909b]" name="beforeClass" is-config="true" duration-ms="1" started-at="2019-10-17T15:15:52Z" finished-at="2019-10-17T15:15:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="testcase1()[pri:0, instance:com.course.demo.TestDemo@1554909b]" name="testcase1" duration-ms="2" started-at="2019-10-17T15:15:52Z" finished-at="2019-10-17T15:15:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase1 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.course.demo.TestDemo@1554909b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-10-17T15:15:52Z" finished-at="2019-10-17T15:15:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.course.demo.TestDemo@1554909b]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2019-10-17T15:15:52Z" finished-at="2019-10-17T15:15:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.course.demo.TestDemo@1554909b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2019-10-17T15:15:52Z" finished-at="2019-10-17T15:15:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="FAIL" signature="testcase2()[pri:0, instance:com.course.demo.TestDemo@1554909b]" name="testcase2" duration-ms="0" started-at="2019-10-17T15:15:52Z" finished-at="2019-10-17T15:15:52Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [2] but found [1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [2] but found [1]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertEquals(Assert.java:125)
	at org.testng.Assert.assertEquals(Assert.java:372)
	at org.testng.Assert.assertEquals(Assert.java:382)
	at com.course.demo.TestDemo.testcase2(TestDemo.java:20)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:74)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:93)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.booter.ProviderFactory$ClassLoaderProxy.invoke(ProviderFactory.java:103)
	at com.sun.proxy.$Proxy0.invoke(Unknown Source)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:145)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcess(SurefireStarter.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:69)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase2 -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:com.course.demo.TestDemo@1554909b]" name="afterClass" is-config="true" duration-ms="0" started-at="2019-10-17T15:15:52Z" finished-at="2019-10-17T15:15:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.course.demo.TestDemo@1554909b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2019-10-17T15:15:52Z" finished-at="2019-10-17T15:15:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:com.course.demo.TestDemo@1554909b]" name="afterTest" is-config="true" duration-ms="0" started-at="2019-10-17T15:15:52Z" finished-at="2019-10-17T15:15:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="AfterSuite()[pri:0, instance:com.course.demo.TestDemo@1554909b]" name="AfterSuite" is-config="true" duration-ms="0" started-at="2019-10-17T15:15:52Z" finished-at="2019-10-17T15:15:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterSuite -->
      </class> <!-- com.course.demo.TestDemo -->
    </test> <!-- 接口测试套件demo -->
  </suite> <!-- test -->
</testng-results>
